<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssembleMiddlePlanTabTitle" xml:space="preserve">
    <value>总装中计划</value>
  </data>
  <data name="AssembleMiddlePlanTitle" xml:space="preserve">
    <value>总装排产（中计划）</value>
  </data>
  <data name="AssemblePlanDetail" xml:space="preserve">
    <value>总装计划一览详细</value>
  </data>
  <data name="NewFAWorkticket" xml:space="preserve">
    <value>生成大工票</value>
  </data>
  <data name="CustomerOrderNum" xml:space="preserve">
    <value>客户订单号</value>
  </data>
  <data name="ProductionUnits" xml:space="preserve">
    <value>生产单元</value>
  </data>
  <data name="IndexTitle" xml:space="preserve">
    <value>总装调度单一览</value>
  </data>
  <data name="ActualAssemblyNum" xml:space="preserve">
    <value>实际装配数</value>
  </data>
  <data name="AssemblyDispatchID" xml:space="preserve">
    <value>调度单号</value>
  </data>
  <data name="AssemblyPlanNum" xml:space="preserve">
    <value>计划装配数</value>
  </data>
  <data name="AssemblyTicketID" xml:space="preserve">
    <value>总装工票号码</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>客户名称</value>
  </data>
  <data name="DispatchStatus" xml:space="preserve">
    <value>当前状态</value>
  </data>
  <data name="PlanDeliveryDate" xml:space="preserve">
    <value>计划交期</value>
  </data>
  <data name="ProdAbbrev" xml:space="preserve">
    <value>产品型号</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="SchedulingOrderDate" xml:space="preserve">
    <value>下单日期</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>班组</value>
  </data>
  <data name="WareHouseDate" xml:space="preserve">
    <value>入库日期</value>
  </data>
  <data name="AssembleQuanlity" xml:space="preserve">
    <value>总装数量</value>
  </data>
  <data name="DispatchId" xml:space="preserve">
    <value>调度单号</value>
  </data>
  <data name="ExportAbbrev" xml:space="preserve">
    <value>零件略称</value>
  </data>
  <data name="MaterialQuanlity" xml:space="preserve">
    <value>原料数量</value>
  </data>
  <data name="RealInQuanlity" xml:space="preserve">
    <value>实际在库数量</value>
  </data>
  <data name="AssemblyPlanNumD" xml:space="preserve">
    <value>计划装配数量</value>
  </data>
  <data name="Dispatcher" xml:space="preserve">
    <value>调度员</value>
  </data>
  <data name="Inspector" xml:space="preserve">
    <value>质检员</value>
  </data>
  <data name="PackingFirst" xml:space="preserve">
    <value>包装</value>
  </data>
  <data name="PackingSecond" xml:space="preserve">
    <value>标签</value>
  </data>
  <data name="PackingThird" xml:space="preserve">
    <value>成品批次号</value>
  </data>
  <data name="TotalNumberOfSets1" xml:space="preserve">
    <value>合计</value>
  </data>
  <data name="TotalNumberOfSets2" xml:space="preserve">
    <value>套</value>
  </data>
  <data name="TypingContent" xml:space="preserve">
    <value>打字</value>
  </data>
  <data name="WareHouseBox" xml:space="preserve">
    <value>装箱入库数量</value>
  </data>
  <data name="WareHouseBoxCer1" xml:space="preserve">
    <value>箱×</value>
  </data>
  <data name="WareHouseBoxCer2" xml:space="preserve">
    <value>套/箱</value>
  </data>
  <data name="WareHouseKeeperID" xml:space="preserve">
    <value>产品管理员</value>
  </data>
  <data name="WareHouseOdd" xml:space="preserve">
    <value>套(零头)</value>
  </data>
  <data name="WareHousePerson" xml:space="preserve">
    <value>交仓人</value>
  </data>
  <data name="BatchNumber" xml:space="preserve">
    <value>批次号</value>
  </data>
  <data name="ConstQty" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="PartName" xml:space="preserve">
    <value>名称型号</value>
  </data>
  <data name="SubItemID" xml:space="preserve">
    <value>名称代码</value>
  </data>
  <data name="PrintViewTitle" xml:space="preserve">
    <value>总装调度单打印预览</value>
  </data>
  <data name="AssemblePlanTitle" xml:space="preserve">
    <value>总装计划一览</value>
  </data>
  <data name="AssembleDispatch" xml:space="preserve">
    <value>总装调度单</value>
  </data>
</root>