<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
    <comment>btn</comment>
  </data>
  <data name="DataProcessing" xml:space="preserve">
    <value>数据处理中......</value>
    <comment>加工排产页面--</comment>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>延迟</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>延误</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="FinishDay" xml:space="preserve">
    <value>完成日</value>
  </data>
  <data name="IndexTitle" xml:space="preserve">
    <value>加工计划一览</value>
    <comment>title</comment>
  </data>
  <data name="Ing" xml:space="preserve">
    <value>生成中</value>
  </data>
  <data name="LittlePlanTitle" xml:space="preserve">
    <value>加工排产（小计划）</value>
    <comment>littlePlan</comment>
  </data>
  <data name="MaterialQuanlity" xml:space="preserve">
    <value>原料数量</value>
  </data>
  <data name="MiddlePlanTitle" xml:space="preserve">
    <value>加工排产（中计划）</value>
    <comment>middlePlan</comment>
  </data>
  <data name="NotProduce" xml:space="preserve">
    <value>未生产</value>
  </data>
  <data name="OrderDetail" xml:space="preserve">
    <value>序号</value>
    <comment>一览-grid</comment>
  </data>
  <data name="OrderId" xml:space="preserve">
    <value>客户订单号</value>
    <comment>一览</comment>
  </data>
  <data name="PartName" xml:space="preserve">
    <value>零部件名称</value>
  </data>
  <data name="PlanState" xml:space="preserve">
    <value>排&amp;nbsp;产&amp;nbsp;状&amp;nbsp;态</value>
    <comment>加工排产页面--排产状态</comment>
  </data>
  <data name="PredictScheduPlan" xml:space="preserve">
    <value>预排产计划</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="ProcessPlan" xml:space="preserve">
    <value>加工排产</value>
    <comment>btn</comment>
  </data>
  <data name="ProcessPlanTabTitle" xml:space="preserve">
    <value>加工中计划</value>
    <comment>加工排产页面--tab标题</comment>
  </data>
  <data name="ProcessPlanTitle" xml:space="preserve">
    <value>加工排产（中计划）</value>
    <comment>加工排产页面--标题</comment>
  </data>
  <data name="ProducePlan_Real" xml:space="preserve">
    <value>生产计划/实际</value>
  </data>
  <data name="ProduceQuanlity" xml:space="preserve">
    <value>加工数量</value>
  </data>
  <data name="ProductId" xml:space="preserve">
    <value>产品型号</value>
  </data>
  <data name="ProvideDate" xml:space="preserve">
    <value>提&amp;nbsp;供&amp;nbsp;日&amp;nbsp;期</value>
  </data>
  <data name="ProvideDay" xml:space="preserve">
    <value>提供日</value>
  </data>
  <data name="Quanlity" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="ScheduNeedQuanlity" xml:space="preserve">
    <value>计划需求&lt;br/&gt;数量</value>
  </data>
  <data name="ScheduPlan" xml:space="preserve">
    <value>排产计划</value>
  </data>
  <data name="ScheduState" xml:space="preserve">
    <value>进度状态</value>
    <comment>一览-进度状态</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>查询</value>
    <comment>btn</comment>
  </data>
  <data name="SelectedMoreExportMessage" xml:space="preserve">
    <value>您选择的记录中含有多种\"&lt;font style='color:red'&gt;零件型号&lt;/font&gt;\"，请重新选择</value>
    <comment>加工排产页面--选择了多种零件的提示信息</comment>
  </data>
  <data name="Specifica" xml:space="preserve">
    <value>材料和规格要求</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>启动日</value>
  </data>
  <data name="StartDay" xml:space="preserve">
    <value>开始日</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="TranslationCardPlan" xml:space="preserve">
    <value>加工流转卡计划</value>
  </data>
</root>