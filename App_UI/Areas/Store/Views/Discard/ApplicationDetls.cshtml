@using App_UI.Resource.ViewText.Common
@using App_UI.Resource.ViewText.Purchase
@using Model
<script type="text/javascript" src="~/Scripts/common/dialog.js"></script>
<style type="text/css">
    .txt_boxStyle
    {
        /*background:rgb(224,224,224);*/
        
        BACKGROUND-COLOR: transparent;
        border:none;
        font-size:14px;
        color:black; 

    }
    
</style>

@{
    ViewBag.Title = "ApplicationDetls";
}
<link rel="stylesheet" href="~/Content/css/Store/ProductScrapped.css" />
<!--buttons-->
<div class="buttons" style="width: 100%; text-align: right;">
    @if (@ViewBag.state == "1")//
    {
        <input type='button' style='font-size: 15px; height: 25px;' value='登录' id='login' onclick='loginFun();' disabled="disabled">
        <input type='button' style='font-size: 15px; height: 25px;' value='编辑' id='edit' onclick='editFun();'>
        <input type='button' style='font-size: 15px; height: 25px;' value='打印预览' id='print' onclick='printFun();'>  
      
    }
    @if (@ViewBag.state == "0")
    {
        <input type='button' style='font-size: 15px; height: 25px;' value='登录' id='login' onclick='loginFun();'>
        <input type='button' style='font-size: 15px; height: 25px;' value='编辑' id='edit' onclick='editFun();' disabled="disabled">
        <input type='button' style='font-size: 15px; height: 25px;' value='打印预览' id='print' onclick='printFun();' disabled="disabled">
    }
    
    <a href='javascript:void(0);' class='easyui-linkbutton' iconcls='icon-add' onclick='closeFun();'>关闭</a>
    <span style="width: 100px; margin-right: 10%">&nbsp;</span>
</div>
<!--line-->
<div style="width: 100%; margin: 20px 0;">
    <hr style="width: 100%; color: #95B8E7" />
</div>
<!--content-->
<div style="width: 100%; text-align: center; margin-bottom: 15px;">
  
</div>
<div style="width: 100%; text-align: center; margin-bottom: 14px;">
    <span id="mainTitle">在库品报废申请详细</span>
</div>

<div style="width: 100%; text-align: center;">
    <div style="width: 53%; margin: auto; text-align: right;">
        <form id="processForm" method='post'>
            <div>
                <span style="margin-left: 20px;" id="DisardId">报废单号：@ViewBag.autoNo</span>
                
            </div>
        </form>
    </div>
</div>

<div class="datagrid">
    <table id="IPPTable"></table>
</div>

<!-- 物料选择对话框 -->
<div class="easyui-dialog" id="ProdPartSelectDiv" closed="true" data-options="buttons:'#prodPartSelect',modal:true"></div>
<div id="prodPartSelect">
    @UserHelpers.ButtonForChoose("SelProdPartAndCloseDialogFun('ProID', 'ProductPartNo', 'PName', editRow, 'ProdPartSelectDiv')")
    @UserHelpers.ButtonForClose("CloseDialogFun('ProdPartSelectDiv')")
</div>

@section head{
    <script>

        var ii = "@ViewBag.state";
        var table;
        var form;
        var pi;
        var dataRows = 0;//数据的总行数
        var Index = 0;

        /***********编辑行所用到的一些方法***************/

        //结束编辑
        function endEdit() {
            var i = 0;
            $("input:text").attr("disabled", true);//关闭list中的text
            while (i < dataRows) {
                //var ed = $("#IPPTable").datagrid("getEditors", i);
                //前12列关闭编辑功能
                for (j = 0; j < 11; j++) {
                    $("#IPPTable").datagrid("endEdit", i);
                };
                i++;
            };
        };

       
        //启动编辑
        vareditorInfons = function () {
            $("input:text").attr("disabled", false);//关闭list中的text
            var row = $(table).datagrid('getRows');
            dataRows = (dataRows + 1);
            if (row.length > 0) {
                for (var i = 0 ; i < row.length; i++) {
                    $(table).datagrid("beginEdit", i);
                }
            }
        }

        
        /***********编辑行所用到的一些方法end***************/



        //跳转打印页面
        var printFun = function () {

            parent.addTab("打印", "/Store/Discard/PrintPreview?DiscardId=@ViewBag.autoNo");
        };

       /***********登录和编辑strat***************/
        //登录
        var loginFun = function () {
            var c = $("#login").attr("disabled", true);
            var d = $("#edit").attr("disabled", false);
            var p = $("#print").attr("disabled", false);
            var c = $("#add").attr("disabled", true);
            save();
            $('.Onblue_style').addClass('txt_boxStyle');
            //endEdit();
        };
        //编辑
        var editFun = function () {

            
            var c = $("#login").attr("disabled", false);
            var d = $("#edit").attr("disabled", true);
            var p = $("#print").attr("disabled", true);
            var i = $("#add").attr("disabled", false);
            vareditorInfons();
            $('.Onblue_style').removeClass('txt_boxStyle');
        };

            /***********  登录和编辑end***************/

        // 【物料选择按钮】按下
        var ShowProdPartInfoScreen = function (obj) {
            var rowObj = obj.parentNode.parentNode.parentNode
            editRow = $(rowObj).index();
            ShowProdPartInfo("ProdPartSelectDiv", "", "");
        }
        
        //取得总价
        var TotalAmtfun = function (pp) {
            var selectors = ["input[name=Qty]", "input[name=TotalAmt]"];
            var tds = $("div.datagrid-view2").find("div.datagrid-body").find("tr.datagrid-row:eq(" + pi + ")").children();
            var s = $(tds[4]).find(selectors[0]).val();//取得数量
            //数量乘以单价
            $("#IPPTable").datagrid('getRows')[pp]['TotalAmt'] = s * ($("#IPPTable").datagrid('getRows')[pp]['PrchsUp']);
            $("#IPPTable").datagrid('getRows')[pp]['Quantity'] = s;
            alert(s+"*0");
            $("#IPPTable").datagrid("refreshColumn", "TotalAmt");

        }
        
        //
        //保存后的跳转
        var referringFun = function () {
            var row = $("#IPPTable").datagrid('getSelections');
            
                var check = "";//零件号
                var whId = "";//仓库号
                var BthID = "";//批次号
                for (var i = 0; i < row.length; i++) {
                    check += row[i].PartDtID + ",";
                    BthID += row[i].BthID + ",";
                    whId += row[i].WareHouseID + ",";
                }
                check = check.substring(0, check.length - 1);
                BthID = BthID.substring(0, BthID.length - 1);
                whId = whId.substring(0, whId.length - 1);
                //跳转到详细页面
                parent.addTab("报废申请详细", "/Store/Discard/ReferringDetls?flg=0&pdtID=" + check + "&whId=" + whId + "&bthID=" + BthID+"&discardId=@ViewBag.autoNo");
           

        };
       

        //列属性:field,title,width,sortable,editor,formatter 
        //获得列属性
        var getColumns = function () {
            var _columns = [[
                    ["PartAbbrevi", "物料编号", null, true],
                    ["PartDtName", "物料名称", 120, true],
                    ["PartDtSpec", "规格", null, true],
                    ["BthID", "批次号", 120, true],
                    ["Quantity", "数量", 40, false,null,function (value, row, index) {
                        var qty = value;
                        return ('<input  Onblur="TotalAmtfun(' + index + ')"  name="Qty" id="Qty" class="Onblue_style" style="color:black"  onkeyup="value=value.replace(\/[^\\d]\/g,\'\')  "  onbeforepaste="clipboardData.setData(\'text\',clipboardData.getData(\'text\').replace(\/[^\\d]\/g,\'\'))"  value=' + value + '>')

                        
                    }
                    ],
                    ["PrchsUp", "单价", 50, false],
                    ["TotalAmt", "总价", 50, false],
                    ["StoreCls", "让步区分", 70, false],
                    ["WareHouseID", "仓库ID", null, false],
                    ["InDate", "入库日期", 130, false, null, function (value, row, index) {
                        var date;
                        var strDt = (value + "").replace(/\/Date\(/, "").replace(/\)\//, "");
                        if (isNaN(strDt)) {
                            date = strDt.ToDate();
                        } else {
                            date = new Date(strDt.ToInt());
                        }
                        var str = date.Format("yyyy-MM-dd");
                        row.Addate = str;
                        return str;
                    }],
                    ["QualityPro", "报废原因", 120, false],
                    ["SltPlan", "处理方案", 80, false, null, function (value, row, index) {
                        return ('<input type="text" class="Onblue_style" id="SltPlan" name="SltPlan" value=' + value + '>');
                    }],
                    ["PartDtID", "物料编号", null, true]

                ]];

                return _columns;

         };
        /*******************************保存start***********************/
        var save = function () {
            $("input:text").attr("disabled", true);
            var row = $("#IPPTable").datagrid('getRows');
            var s = [];//单价集合
            var stlP = [];//处理方案集合
            for (var i = 0; i < row.length; i++) {
                var selectors = ["input[name=Qty]", "input[name=TotalAmt]", "input[name=SltPlan]"];
                var tds = $("div.datagrid-view2").find("div.datagrid-body").find("tr.datagrid-row:eq(" + i + ")").children();
                s[i] = $(tds[4]).find(selectors[0]).val();
                stlP[i] = $(tds[11]).find(selectors[2]).val();
            }
            //取得行数
            if (row.length > 0) { //定义一个数组用于存放table中的数据
                var orderList = [];
                for (var i = 0; i < row.length; i++) {
                    var order = {};
                    order["RowIndex"] = i;
                    order["BThId"] = row[i].BthID;
                    order["PartDtID"] = row[i].PartDtID;
                    order["PartDtName"] = row[i].PartDtName;
                    order["PartDtSpec"] = row[i].PartDtSpec;
                    order["Quantity"] = s[i];
                    order["PrchsUp"] = row[i].PrchsUp;
                    order["StoreCls"] = row[i].StoreCls;
                    order["WareHouseID"] = row[i].WareHouseID;
                    order["InDate"] = row[i].InDate;
                    order["QualityPro"] = row[i].QualityPro;
                    order["SltPlan"] = stlP[i];
                    //将order加进orderList
                    orderList.push(order);
                }
                $.ajax({
                    async: true,
                    url: "/Store/Discard/SaveUpdata?discardId=@ViewBag.autoNo&iid=@ViewBag.state",
                    data: {
                        DisardId: $("#DisardId").val(),
                        orderList: orderList
                    },
                    type: "post",
                    success: function (data) {
                        var _data = eval('(' + data + ')');
                        if (_data.Result == false) {
                            $.messager.alert("信息", _data.Message, "info", function () {
                                //window.location.reload();//刷新数据
                            });
                        } else {
                            //title：显示在标题面板的标题文本;msg：提示框显示的消息文本;icon：提示框显示的图标,可用的值是：error,question,info,warning;fn：当窗口关闭时触发的回调函数
                            $.messager.alert("信息", _data.Message, "info", function () {
                                referringFun();
                            });
                            //do something another...
                        }
                    }
                });
            }
        }

    /************************保存end*****************************/

        $(function () {
            table = $("#IPPTable");
            form = $("#processForm");
            Common.Functions.createDataGrid({//创建datagrid,详细内容参见functions.js
                target: "#IPPTable",//table容器,必须
                url: "/Store/Discard/GetApplication?pdtID=@ViewBag.id&whId=@ViewBag.iid&bthID=@ViewBag.BthID&discardId=@ViewBag.iiid",//获取数据的地址,必须
                    columns: getColumns(),//列属性,必须
                //idField: "UId",//标识字段
                    toolbar: $("#toolbar"),//工具栏 
                //checkbox: true,//是否显示checkbox
                    maxWidth: 1000,//最大宽度
                    maxHeight: 300,//最大高度
                    onLoadError: function () {
                        alert("请求服务器失败，请刷新页面重试!");
                    },
                    onCreating: function (data) {//数据成功加载
                        if ("@ViewBag.state" == "1")
                        {
                            $("input:text").attr("disabled", true);
                            $('.Onblue_style').addClass('txt_boxStyle');
                        }//从在库品报废申请一览加载数据到参照画面关闭可编辑的列
                      
                    },

                //重写双击事件
                    onDblClickRow: function (rowIndex, rowData) {
                        //var r = _options.onDblClickRow.call(_target, rowIndex, rowData);
                        //if (r == false) {
                        //} else {
                        //    //_target.datagrid("beginEdit", rowIndex);
                        //    _target.data("lastRowIndex", rowIndex);
                        //}
                        //return true;
                    },
                    
                    onClickRow: function (rowIndex, rowData) {
                        pi = rowIndex;
                        return false;
                    },
                    loadFilter: function (data) {
                        var _data = {};
                        _data.rows = isUndefined(data.rows) ? data : data.rows;
                        _data.total = isUndefined(data.total) ? 5 : data.total;
                        return _data;
                    }
            
          
          })

          //PartDtID列不可见
          $('#IPPTable').datagrid('hideColumn', 'PartDtID');



      });


    </script>
}







