@using App_UI.Resource.ViewText.Produce
@using App_UI.Resource.ClientMessage
@using App_UI.Areas.Controllers
@using App_UI.Helper
@using App_UI.Resource.ViewText.Common
@using App_UI.Resource.ViewText.Produce
@using Model
@section head{
    <style type="text/css">
        .table_search {
            margin: auto;
            text-align: left;
        }

        .Search_Form span.combo-arrow {
            margin-left: -4px;
        }
    </style>

    <script type="text/javascript">
        var data_Table_Name = "#Data_Table";//数据列表表格
        var search_Form_Name = "#Search_Form";//搜索form
        var PickingNo;//暂存修改时的uid(主键)

        //列属性:field(字段,非空) ,title(列名,非空),width(默认80),sortable(默认false),editor(默认null),formatter(默认-函数)
        var TABLE_COLUMNS = [[
            ["PickingNo", "@VT_PickingBill.PickingNO", 110, true, null, function (value, row, index) {
            var htmlStr = "";
            htmlStr += ("<a href='#' class='operator' onclick=\"" + "show_detail_form_Fun('" + row.PickingNo + "')\"" + ">" + row.PickingNo + "</a>");
            return htmlStr;
        }],
        ["ComeFromNo", "@VT_PickingBill.ComeFromNO", 130, true, null, function (value, row, index) {
            if (row.ComeFromNoW != null && row.ComeFromNoW != "") {
                return row.ComeFromNoW;
            } else if (value != null && value != "") {
                return value;
            } else {
                value = value + row.ComeFromNoW;
                return value;
            }
        }],
        ["ComeFrom", "@VT_PickingBill.PickingFrom", 110, true],
        ["PickingTime", "@VT_PickingBill.PickingDate", 100, true, null, function (value, row, index) {
            var date;
            var strDt = (value + "").replace(/\/Date\(/, "").replace(/\)\//, "");
            if (isNaN(strDt)) {
                date = strDt.ToDate();
            } else {
                date = new Date(strDt.ToInt());
            }
            var str = date.Format("yyyy-MM-dd");
            row.Addate = str;
            return str;
        }],
        ["PickingUnit", "@VT_PickingBill.PickingDept", 70, false],
        ["Use", "@VT_PickingBill.Use", 120, false],
        ["UsePerson", "@VT_PickingBill.UsePerson", 70, false],
        ["StoreManager", "@VT_Common.StoreManager", 70, false],
        ["RealPickingCount", "@VT_PickingBill.CurrentState", 70, false, null, function (value, row, index) {
            if (value > 0) {
                return "@UIConstant.PickingBillState.PICKING";
            } else {
                return "@UIConstant.PickingBillState.NOPICKING";
            }
        }]
    ]];

    $(function () {
        Common.Functions.createDataGrid({//创建datagrid,详细内容参见functions.js
            target: data_Table_Name,//table容器,必须
            url: "/Produce/PickingBill/Get",//获取数据的地址,必须
            columns: TABLE_COLUMNS,//列属性,必须
            idField: "PickingNo",//标识字段
            checkbox: true,//是否显示checkbox
            singleSelect: true,
            maxWidth: 950,//最大宽度
            maxHeight: 500,//最大高度
            onBeforeLoad: function (queryParams) {//可以添加一些额外参数,主要用于查询条件

                var arr = $(search_Form_Name).serializeArray();

                $.each(arr, function () {
                    queryParams[this.name] = this.value;
                });
            },
            onLoadError: function () {
                alert("@CM_Common.MSG0002");
            },
            onCreating: function (data) {//数据成功加载
                //do something...
            }
        });


    });


    //一致性验证
    /*$.extend($.fn.validatebox.defaults.rules,{
        equals:{
            validator:function(value,param){
                return value==$(param[0]).val();
            },
            message:"密码不一致，请重新输入"
        }     
    });*/

    var show_Add_Form_Fun = function () {
        /*var c = parent.document.getElementById("tabs");
        alert(c);
        var b = parent.$("#tabs");
        alert(b);*/
        parent.addTab("@VT_PickingBill.DetailsTabName", '/Produce/PickingBill/Create/');

    }

   
    var show_detail_Form_Fun = function (id) {

        parent.addTab("@VT_PickingBill.DetailsTabName", '/Produce/PickingBill/Details/' + id);

    };


   
    var show_Update_Form_Fun = function () {
        var selectedRows = $(data_Table_Name).datagrid("getSelections");
            if (selectedRows.length == 0) {
                $.messager.alert("提示", "您尚未选中任何记录");
            } else {
                var id = selectedRows[0]["PickingNo"];
                parent.addTab("物料领用单修改", '/Produce/PickingBill/Edit/' + id);
            }

      
    };



    //搜索
    var search_Btn_Fun = function () {
        $(search_Form_Name).form("submit", {//form提交
            url: "/Produce/PickingBill/Get",
            onSubmit: function (param) {//除表单外的数据(分页)
                var pager = $(data_Table_Name).datagrid("getPager");
                var pagerOptions = $(pager).pagination("options");
                param.rows = pagerOptions.pageSize;
                param.page = 1;
            },
            success: function (data) {
                $(data_Table_Name).datagrid("loadData", eval('(' + data + ')'));//重新加载数据
            }
        });
    }


    //根据主键删除某条记录,参数：用户id
    var delete_Infos_Fun = function (uid) {
        $.messager.confirm("Confirm", "@CM_Common.DLG0001", function (r) {
            if (r) {
                $.post("/Produce/PickingBill/Delete", { UId: uid }, function (data) {
                    var _data = eval('(' + data + ')');
                    console.info(_data);
                    if (_data.result == true) {
                        $(data_Table_Name).datagrid("reload");
                    } else {
                        alert("@CM_Common.MSG0001");
                        //do something another...
                    }
                });
            }
        });
    };
        function pageClose() {
            parent.closeTab();

        }
    </script>
}
<div class="FunctionButton_Area">
    @if (Model == 1)
    { //拥有新建权限
        @UserHelpers.ButtonForCreate("show_Add_Form_Fun()")
    }
    @UserHelpers.ButtonForUpdate("show_Update_Form_Fun()")
    @UserHelpers.ButtonForDelete("show_Add_Form_Fun()")
    @UserHelpers.ButtonForClose("pageClose()")
</div>
@UserHelpers.Line()
    @UserHelpers.Title(VT_PickingBill.IndexTitle)
    <div class="div_main">
        <div id="toolbar" class="div_search">
            <form id='Search_Form' class="Search_Form" method='post'>
                <table class="table_search">
                    <tr>
                        <td>@VT_PickingBill.ComeFromNO：</td>
                        <td>@UserHelpers.Input("ComeFromNo")</td>
                        <td>@VT_PickingBill.PickingNO：</td>
                        <td>@UserHelpers.InputSimple("PickingNo",15)</td>
                        <td>@VT_PickingBill.PickingDate：</td>
                        <td>@UserHelpers.TimeInput("TimeBegin", "TimeBegin")</td>
                        <td>~ @UserHelpers.TimeInput("TimeEnd")</td>
                    </tr>
                    <tr>
                        <td>@VT_PickingBill.PickingDept：</td>
                        <td>@UserHelpers.SelectWidget(Constant.MasterSection.DEPT, "PickingUnit", "PickingUnit")</td>
                        <td>@VT_PickingBill.CurrentState：</td>
                        <td>@UserHelpers.Select(Constant.MasterSection.PICKING_STATE, "Type", "Type")</td>
                        <td>@VT_PickingBill.PickingFrom：</td>
                        <td>@UserHelpers.SelectWidget(Constant.MasterSection.PICKING_TYPE, "ComeFrom", "ComeFrom")</td>
                        <td>@UserHelpers.ButtonForSearch("search_Btn_Fun()")</td>
                    </tr>

                </table>
            </form>
        </div>
        <div class="div_datagrid">
            <table id="Data_Table"></table>
        </div>
        <div class="div_datagrid">

            <table id="complexTable"></table>
        </div>
    </div>
