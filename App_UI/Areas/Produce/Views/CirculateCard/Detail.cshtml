@using Model.Produce
@model IDictionary<string, Object>
@{
    ViewBag.Title = "加工流转卡";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}

<style type="text/css">
    .details {
        text-align:center;
        margin:auto;
        padding-left:80px;
        padding-right:80px;
    }

    .a {
        font-size: 24px;
        color: red;
    }

    .table_detail {
        width: 100%;
        height:100%;
        border-collapse: collapse;
        border-width: 0px;
    }

    .table_detail td {
        border-style:solid;
        border-color: #838383;
        border-width: 1px;
        text-align: center;
        font-size: 15px;
        height:100%;
        width:80px;
    }

    .table_detail .tr_thead {
        text-align: center;
    }


    .table_detail tr {
      
        color: #2B5E80;
        font-weight: 700;
    }
    .table_detail input {
        width:70px;
        height:20px;
        line-height:20px;
    }


    .table_detail .height30 {
        height: 30px;
    }

    .tr_thead td {
        filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0);
        -ms-filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0); /*IE8*/
        background: -moz-linear-gradient(top, red, rgba(0, 0, 255, 0.5));
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#f6f6f6), to(rgba(216, 216, 218, 1)));
    }
    .table_detail .css3div{
        font-size:inherit;
         filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0);
        -ms-filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0); /*IE8*/
        background: -moz-linear-gradient(top, red, rgba(0, 0, 255, 0.5));
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#f6f6f6), to(rgba(216, 216, 218, 1)));
    }
    .table_detail .css3td {
        filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0);
        -ms-filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0); /*IE8*/
        background: -moz-linear-gradient(top, red, rgba(0, 0, 255, 0.5));
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#f6f6f6), to(rgba(216, 216, 218, 1)));
    }

    .table_detail .tr_data {
        background-color: white;
    }

    .table_detail .tr_data td {
    }

    td .td_detail_input {
        width: 32px;
        height: 32px;
    }

    .form_detail {
        width: 100%;
        height: 100%;
    }

    .detail-div_head {
        width: 100%;
        margin-bottom: 20px;
        position: relative;
        float: left;
        display: inline;
    }

    #box {
        border: 1px solid #696;
        padding: 60px 0;
        text-align: center;
        width: 100%;
        box-shadow: #666 0px 2px 3px; /*CSS3*/
        background: #EEFF99;
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#EEFF99), to(#66EE33)); /*Safari、Chomre*/
        background: -moz-linear-gradient(#EEFF99, #66EE33); /*Firefox*/
        background: linear-gradient(#FFFFFF, rgba(199, 199, 199, 0.59));
    }

    .width_33 {
        width: 33%;
    }
    .height_22 {
        height:22px;
        line-height:22px;
    }
    .height_28 {
        height:28px;
        line-height:28px;
    }
     .height_47 {
        height:47px;
        line-height:47px;
    }

    .display_inline {
        display: inline;
    }

    .span_title {
        font-size: 18px;
        width: 33%;
    }

    .span_orderId {
        width: 33%;
    }

    .font_red {
        color: red;
    }

    .font_size16 {
        font-size: 16px;
    }

    .align_center {
        text-align: center;
    }

    .align_left {
        text-align: left;
    }

    .margin_bottom20 {
        margin-bottom: 20px;
    }

    .margin_top20 {
        margin-top: 20px;
    }

    .display_block {
        display: block;
    }

    .input_width {
        width: 45px;
    }

    .width85 {
        width: 76px;
    }

    .gradient {
        width: 300px;
        height: 150px;
        filter: alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#FFFFFF',endcolorstr='#c4c0c0',gradientType=0);
        -ms-filter: alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#FFFFFF',endcolorstr='#c4c0c0',gradientType=0); /*IE8*/
        background: red; /* 一些不支持背景渐变的浏览器 */
        background: -moz-linear-gradient(top, red, rgba(0, 0, 255, 0.5));
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#FFFFFF), to(rgba(209, 209, 209, 0.8)));
    }
    .margin_left_34 {
        margin-left: 34%;
    }
    .table_Order {
        width:70%;
        font-size:15px;
        background-color:white;
        
        border-collapse: collapse;
    }
    .table_Order td {
         
        border-width:1px;
        border-style:solid;
         border-color:#909296;
    }
        .table_Order input {
            width:70px;
        }
        .table_Order .css3div{
        font-size:inherit;
         filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0);
        -ms-filter: alpha(opacity=100 finishopacity=100 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr='#f6f6f6',endcolorstr='#d8d8da',gradientType=0); /*IE8*/
        background: -moz-linear-gradient(top, red, rgba(0, 0, 255, 0.5));
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#f6f6f6), to(rgba(216, 216, 218, 1)));
    }
    .table_CtmOrder {
        margin-top:15px;
        font-size:13px;
    }
     .table_CtmOrder input {
            width:40px;
        }

    .table_AssemInfo {
        width:100%;
        font-size:13px;
    }
    .table_Bottom {
        width:100%;
    }
</style>
<script type="text/javascript">
    //确定按钮,添加和修改数据,待修改
    var operator_Btn_Ensure_Fun = function () {
        @{
            string _var = "var html=1;";
            if(ViewBag.bill.ProcDelivID==null)
            {
               _var="var html=0;";
               
            }
             @_var;
         }
        if (html == 0) {
            alert("该加流转卡没有产品是错误数据，不能保存！");
            return;
        }


        $("#Detail_Form").formSubmit([
                "/Produce/CirculateCard/DetailSave",
                function (param) {
                    return true;
                    //console.info($(data_Table_Name).find("input:checkbox").is(":checked"));
                },
                function (data) {
                    /*var _data = eval('(' + data + ')');
                    if (_data.result == true) {//返回的结果(true/false)
                        $(data_Table_Name).datagrid("reload");
                        $("#dlg").dialog("close");
                    } else {
                        //do something...
                    }*/
                    var _data = eval('(' + data + ')');
                    if (_data.result == false) {//返回的结果(true/false)
                        alert("该流转卡已申请领料数量已达最大,不能继续申请！");
                        return;
                    } else {
                        alert("保存成功！");
                    }
                }
        ]);

    };

    function createRows(table1) {
        var rows = table1.find("tr");
        var length = rows.length;
        //计划日期
        var row = rows.get(length - 3);
        row = $(row);
        var tds = row.find("td");

        var no = row.find("input[name='no']");

        var date = row.find("input[name='date']");


        var tr = "<tr class='datagrid-header-row'><td class='width85'><div class='css3div height_28'>计划日期：</div></td>";
        for (var i = 0; i < tds.length - 1; i++) {
            if (i < no.length) {
                var s = $(no[0]).val();
                s = parseInt(s) + 1;
                tr = tr + "<td class='width85'><input type='hidden' name='no' value='" + s + "'/><input type='text' name='date' value='' /></td>";

            } else {
                tr = tr + "<td class='width85'></td>";
            }
        }
        tr = tr + "</tr>";
        table1.append(tr);
        tr = "";
        //操作者
        row = rows.get(length - 2);
        row = $(row);
        var op_pro_no = row.find("input[name = 'op_pro_no']");

        tr = "<tr class='datagrid-header-row'><td class='width85'><div class='css3div height_28'>操作者：</div></td>";
        for (var i = 0; i < tds.length - 1; i++) {
            if (i < no.length) {
                var s = $(op_pro_no[0]).val();
                tr = tr + "<td class='width85'><input type='hidden' name='op_pro_no' value='" + s + "' /><input type='text' name='opetator' value='' /><input name='newData' type='hidden' value='1'/></td>";

            } else {
                tr = tr + "<td class='width85'></td>";
            }
        }
        tr = tr + "</tr>";
        table1.append(tr);
        tr = "";
        //计划数量
        row = rows.get(length - 1);
        row = $(row);
        tr = "<tr class='datagrid-header-row'><td class='width85'><div class='css3div height_28'>数量：</div></td>";
        for (var i = 0; i < tds.length - 1; i++) {
            if (i < no.length) {
                tr = tr + "<td class='width85'><input type='text' name='count' value='' /></td>";
            } else {
                tr = tr + "<td class='width85'></td>";
            }
        }
        tr = tr + "</tr>";
        table1.append(tr);
    }

    function addRow() {
        var table1 = $("#table_detail_1");
        if (table1.length != 0) {
            createRows(table1);
        }
        var table2 = $("#table_detail_2");
        if (table2.length != 0) {
            createRows(table2);
        }
       

    }
    function changeBeginPickCount() {
        var beginPickCount = $(".beginPickCount").html();
        beginPickCount = 0;
        var count = $("input[name='PlnQty']");
        beginPickCount = parseInt(beginPickCount);
        for (var i = 0; i < count.length; i++) {
            var val = $(count.get(i)).val();
            beginPickCount += parseInt(val);
        }
        $(".beginPickCount").html(beginPickCount);
    }
    function pageClose() {
        parent.closeTab();

    }

    var isDisable = false;

    function changeInputState() {
        isDisable = !isDisable;
        var inputs = $("#Detail_Form").find(".old");
        for (var i = 0; i < inputs.length; i++) {
            var inp = inputs[i];
            inp.disabled = isDisable;
            //inp.attr("disabled",true);
        }
        $("#controlDisable").attr("disabled", false);
    }
    $(function () {
        changeInputState();
    });
</script>
 <div class="FunctionButton_Area">
                @UserHelpers.ButtonForSave("operator_Btn_Ensure_Fun()")
                @UserHelpers.ButtonForClose("pageClose()")
                @UserHelpers.Line()
</div>  
<div class="details">
    <form id="Detail_Form" method="post" class="form_detail">
         
        <div class="detail-div_head display_inline">
            <div>
                 @UserHelpers.Title("加工流转卡"," ")
            </div>
            <div style="font-size:14px;float:right;">
                <div style="width:220px;height:70px;margin-top:-20px;border-style:solid;border-color:red;border-width:1px;"></div>
                <div class="display_inline">
                    <span class="span_orderId font_red">单据编号：@ViewBag.bill.ProcDelivID<input type="hidden" class="" name="ProcDelivID" value="@ViewBag.bill.ProcDelivID" /></span>
                </div>
            </div>
           
            <div>
                <table class="table_CtmOrder">
                @{
                   Object obj;
                   bool flag = ViewData.TryGetValue("adList", out obj);
                   if (flag){

                       IList<VM_CustomTranslateInfoForDetaiShow> adList = (IList<VM_CustomTranslateInfoForDetaiShow>)obj;
                       int k=adList.Count;
                       for(int n=0;n<k;n++){
                           VM_CustomTranslateInfoForDetaiShow temp = adList.ElementAt(n);
                            <tr>
                                <td>客户订单号：</td><td>@temp.CustomerOrderNum</td>
                                <td>数量：</td><td>@temp.PlnQty</td>
                                @{n+=1;}
                                @{if (n >= k) { break; } temp = adList.ElementAt(n);}
                                <td>客户订单号：</td><td>@temp.CustomerOrderNum</td>
                                <td>数量：</td><td>@temp.PlnQty</td>
                            </tr>
                       }
                   }
                }
                </table>
                
            </div>  

        </div>
        <div class="align_left Search_Form">
            <table class="table_AssemInfo">
                <tr>
                    <td ">
                        产品型号：
                    </td>
                    <td>
                        @ViewBag.bill.ProductType
                    </td>
                    <td>
                        初期领料数：
                    </td>
                    <td>@ViewBag.bill.NewBeginCount.ToString("0")</td>
                    <td>
                        加工开始日：
                    </td><!--ViewBag.bill.LoadCount.ToString()-->
                    <td>@ViewBag.bill.ProcessBeginDate.ToString("yyyy/MM/dd")</td>
                    <td>
                        <input type="checkbox" name="" id="controlDisable" onchange="changeInputState()"/>编辑以前资料
                    </td>
                    <td>
                         <input name="isOver" value="0" type="radio" @{string html = "checked"; if("1".Equals(ViewBag.bill.IsOver)){ @html;}}/>已完结
                         <input name="isOver" value="0" type="radio" @{if ("0".Equals(ViewBag.bill.IsOver)){ @html;}}/>未完结
                    </td>
                    <td>
                        交仓数：
                    </td>
                     <td>
                        @ViewBag.bill.GiveStoreCount
                    </td>
                    <td><input type="button" value="添加" onclick="addRow()"/></td>
                </tr>
            </table>
            

        </div>
        
            @{
                //Object obj;
                flag = Model.TryGetValue("process", out obj);
                if (flag)
                {
                    //有数据
                    IDictionary<int, string> dy_process = (Dictionary<int, string>)obj;
                    int process_count = dy_process.Count();
                    int max_col = 11;
                    int mark_count = 0;
                    int new_count = 0;
                    int temp_count = 0;
                    flag = Model.TryGetValue("no", out obj);//顺序
                    if (flag)
                    {
                        <table class="datagrid-htable table_detail " id="table_detail_1">
                       @{ 
                       
                        //flag = Model.TryGetValue("no", out obj);//顺序

                        IEnumerable<int> no = (IEnumerable<int>)obj;
                        <tr class="datagrid-header-row ">
                        <td class="width85"><div class="css3div height_28">工序：</div></td>
                        @foreach (var n in no)
                        {
                            mark_count++;
                            string temp_str;
                            dy_process.TryGetValue(n, out temp_str);//工序号
                            <td class="width85"><div class="css3div height_28">@temp_str<input name="process_no" type="hidden" value="@n"/></div></td>
                            if (mark_count >= max_col)
                            {

                                break;
                            }
                        }  
                        @for (int i = mark_count; i < max_col; i++)
                        {
                            <td class="width85"><div class="css3div height_28"></div></td>
                        }
                          @{mark_count = 0; }

                        </tr> 
                                flag = Model.TryGetValue("count", out obj);
                                int k = (int)obj;
                                for (int i = 1; i <= k; i++)
                                {
                             <tr class="datagrid-header-row ">
                              <td class="width85"><div class="css3div height_28">日期：</div></td>
                            @foreach (var n in no)
                            {
                                mark_count++;
                                string temp_str;
                                dy_process.TryGetValue(n, out temp_str);
                                flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                                //flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                Object vm;
                                flag = dy_data.TryGetValue(i.ToString(), out vm);
                                DateTime td = DateTime.Now;
                                if (flag)
                                {
                                    VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;//顺序号
                                    <td class="width85"><input type="hidden" name="no" value="@i"/><input class="old" type="text" name="date" value="@bill.OperateDate"/></td>
                                }
                                else
                                {
                                    <td class="width85"><input type="hidden" name="no" value="@i"/><input type="text" name="date" value="@td.ToString("yyyy/MM/dd")" /></td>
                                }
                                if (mark_count >= max_col)
                                {
                                    break;
                                }
                            }
                                  @for (int n = mark_count; n < max_col; n++)
                                  {
                                <td class="width85"></td>
                                  }
                                    @{mark_count = 0; }

                             </tr>
                            <tr class="datagrid-header-row ">
                              <td class="width85"><div class="css3div height_28">操作者：</div></td>
                            @foreach (var n in no)
                            {
                                mark_count++;
                                string temp_str;
                                dy_process.TryGetValue(n, out temp_str);
                                flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                               // flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                Object vm;
                                flag = dy_data.TryGetValue(i.ToString(), out vm);
                                if (flag)
                                {
                                    VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;//工序顺序
                                    <td class="width85"><input type="hidden" name="op_pro_no" value="@n" /><input  class="old" type="text" name="opetator"  value="@bill.Operator" /><input name="newData" type="hidden" value="0"/></td>
                                }
                                else
                                {
                                    <td class="width85"><input type="hidden" name="op_pro_no" value="@n" /><input type="text" name="opetator" value="" /><input name="newData" type="hidden" value="1"/></td>
                                }
                                if (mark_count >= max_col)
                                {
                                    break;
                                }
                            }
                                 @for (int n = mark_count; n < max_col; n++)
                                 {
                                <td class="width85"></td>
                                 }
                                   @{mark_count = 0; }
                             </tr>
                             <tr class="datagrid-header-row ">
                              <td class="width85"><div class="css3div height_28">数量：</div></td>
                            @foreach (var n in no)
                            {
                                mark_count++;
                                string temp_str;
                                dy_process.TryGetValue(n, out temp_str);
                                flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                                //flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                Object vm;
                                flag = dy_data.TryGetValue(i.ToString(), out vm);
                                if (flag)
                                {
                                    VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;
                                    <td class="width85"><input  class="old" type="text" name="count" value="@bill.OperateCount" /></td>
                                }
                                else
                                {
                                    <td class="width85"><input type="text" name="count" value="" /></td>
                                }
                                if (mark_count >= max_col)
                                {
                                    break;
                                }
                            }
                            @for (int n = mark_count; n < max_col; n++)
                            {
                            <td class="width85"></td>
                            }
                            @{ temp_count = mark_count;
                               mark_count = 0;}
                             </tr>
                                }
                                if (temp_count < max_col)
                                {
                           
                                }
                          
                          }
                            </table>
                          
                                //第二个table
                                if (temp_count >= max_col)
                                {
                              <table class="datagrid-htable table_detail"  id="table_detail_2">
                                <tr class="datagrid-header-row ">
                                <td class="width85"><div class="css3div height_28">工序：</div></td>
                                    @for (int c = temp_count - 1; c < no.Count(); c++)
                                    {
                                        new_count++;
                                        string temp_str;
                                        int n = no.ElementAt(c);
                                        dy_process.TryGetValue(n, out temp_str);
                                        <td class="width85"><div class="css3div height_28">@temp_str<input name="process_no" type="hidden" value="@n"/></div></td>
                               
                                    }
                                    @for (int i = new_count; i < max_col; i++)
                                    {
                                        <td class="width85"><div class="css3div height_28"></div></td>
                                    }
                                    @{new_count = 0;}

                                </tr> 
                                  @for (int i = 1; i <= k; i++)
                                  {
                                         <tr class="datagrid-header-row ">
                                          <td class="width85"><div class="css3div height_28">日期：</div></td>
                                            @for (int c = temp_count - 1; c < no.Count(); c++)
                                            {
                                                new_count++;
                                                string temp_str;
                                                int n = no.ElementAt(c);
                                                dy_process.TryGetValue(n, out temp_str);
                                                flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                                                //flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                                IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                                Object vm;
                                                flag = dy_data.TryGetValue(i.ToString(), out vm);
                                                DateTime td = DateTime.Now;
                                                if (flag)
                                                {
                                                    VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;
                                                    <td class="width85"><input type="hidden" name="no" value="@i"/><input  class="old" type="text" name="date"  value="@bill.OperateDate"/></td>
                                                }
                                                else
                                                {
                                                    <td class="width85"><input type="hidden" name="no" value="@i"/><input type="text" name="date"  value="@td.ToString("yyyy/MM/dd")" /></td>
                                                }
                                            }
                                              @for (int n = new_count; n < max_col; n++)
                                              {
                                                <td class="width85"></td>
                                              }
                                              @{new_count = 0;}

                                         </tr>
                                         <tr class="datagrid-header-row ">
                                          <td class="width85"><div class="css3div height_28">操作者：</div></td>
                                           @for (int c = temp_count - 1; c < no.Count(); c++)
                                           {
                                               new_count++;
                                               string temp_str;
                                               int n = no.ElementAt(c);
                                               dy_process.TryGetValue(n, out temp_str);
                                               flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                                               //flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                               IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                               Object vm;
                                               flag = dy_data.TryGetValue(i.ToString(), out vm);
                                               if (flag)
                                               {
                                                   VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;
                                                    <td class="width85"><input type="hidden" name="op_pro_no" value="@n" /><input  class="old" type="text" name="opetator"  value="@bill.Operator" /><input name="newData" type="hidden" value="0"/></td>
                                               }
                                               else
                                               {
                                                    <td class="width85"><input type="hidden" name="op_pro_no" value="@n" /><input type="text" name="opetator"  value="" /><input name="newData" type="hidden" value="1"/></td>
                                               }
                                           }
                                             @for (int n = new_count; n < max_col; n++)
                                             {
                                                <td class="width85"></td>
                                             }
                                              @{new_count = 0;}
                                         </tr>
                                         <tr class="datagrid-header-row ">
                                           <td class="width85"><div class="css3div height_28">数量：</div></td>
                                           @for (int c = temp_count - 1; c < no.Count(); c++)
                                           {
                                               new_count++;
                                               string temp_str;
                                               int n = no.ElementAt(c);
                                               dy_process.TryGetValue(n, out temp_str);
                                               flag = Model.TryGetValue(n.ToString(), out obj);//取出工序对应的人
                                               //flag = Model.TryGetValue(temp_str, out obj);//取出工序对应的人
                                               IDictionary<string, Object> dy_data = (IDictionary<string, Object>)obj;
                                               Object vm;
                                               flag = dy_data.TryGetValue(i.ToString(), out vm);
                                               if (flag)
                                               {
                                                   VM_ProcessTranslateCardPartForDetailShow bill = (VM_ProcessTranslateCardPartForDetailShow)vm;
                                                    <td class="width85"><input type="text"  class="old" name="count"  value="@bill.OperateCount" /></td>
                                               }
                                               else
                                               {
                                                    <td class="width85"><input type="text" name="count"  value="" /></td>
                                               }
                                           }
                                            @for (int n = new_count; n < max_col; n++)
                                            {
                                                <td class="width85"></td>
                                            }
                                              @{new_count = 0;}
                                         </tr>
                                  }
                                   
                                </table>
                            }
                    }

                }
           }
            
        <div class="margin_top20">
           
        </div>
    </form>
</div>
