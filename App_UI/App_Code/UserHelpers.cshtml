@using App_UI.Resource.ViewText.Common
@using Model
<!--
  -- 生成下拉框控件
  --<param name="sectioncd">MasterInfo中的sectionCD值</param>
  --<param name="name">下拉框的name属性</param>
  --<param name="id">下拉框的id属性</param>
-->
@helper SelectWidget(string sectioncd, string name, string id){<input id="@id" class="Select_customizeOne" name="@name" style="width:112px;height:22px;"><script type="text/javascript">
    $(function () {$('#@id').combobox({  
            url: '/Common/MasterInfo/GetForSearch/@sectioncd',
            valueField: 'AttrCd',
            textField: 'AttrValue',
            panelHeight: "auto",
            editable: false
        });   
    });</script>}

<!--
  -- 生成下拉框控件,没有全部选项
  --<param name="sectioncd">MasterInfo中的sectionCD值</param>
  --<param name="name">下拉框的name属性</param>
  --<param name="id">下拉框的id属性</param>
-->
@helper SelectWidgetNoAll(string sectioncd, string name, string id){<input id="@id" class="Select_customizeOne" name="@name" style="width:112px;height:22px;">
<script type="text/javascript">
    $(function () {
        $('#@id').combobox({
            url: '/Common/MasterInfo/Get/@sectioncd',
            valueField: 'AttrCd',
            textField: 'AttrValue',
            panelHeight: "auto",
            editable: false,
            loadFilter: function (data) {
                //$('#@id').
                $('#@id').combobox('setValue', data[0].AttrCd);
                return data;
            }
        });
       
    });
</script>}
<!--
  -- 生成供货商信息的下拉框控件
  --<param name="compType">供货商种类（0：外购   1：外协）</param>
  --<param name="pdtID">供货商可提供的产品零件ID</param>
  --<param name="name">下拉框的name属性</param>
  --<param name="id">下拉框的id属性</param>
-->
@helper SelectCompanyInfo(string compType, string pdtID, string name, string id){<input id="@id" class="Select_customizeOne" name="@name" style="width:112px;height:22px;">
    <script type="text/javascript">
        $(function () {
            $('#@id').combobox({
                url: '/Technology/CompanyInfo/GetCompanyList4Sel/@compType',
                valueField: 'AttrCd',
                textField: 'AttrValue',
                panelHeight: "auto",
                editable: false
            });
        });
    </script>}

<!--朱静波-->
<!--简单的下拉框::>_<:: 为了样式的统一-->
@helper SelectSimple(string id)
{
    <input id="@id" class="Select_customizeOne" name="@id" style="width:112px;height:22px;">
}


<!--
  -- 生成下拉框控件（部门）
  --<param name="name">下拉框的name属性</param>
  --<param name="id">下拉框的id属性</param>
-->
@helper SelectDepartment(string name, string id)
{
<input id="@id" name="@name" style="width:112px;height:22px;">
<script type="text/javascript">
    $(function () {
        $('#@id').combobox({
        url: '/Common/MasterInfo/GetDepartMentData',
        valueField: 'AttrCd',
        textField: 'AttrValue',
        panelHeight: "auto",
        editable: false
    });
});
</script>}


<!--
  生成html选本的下拉框
  <param name="sectioncd">MasterInfo中的sectionCD值</param>
  <param name="name">下拉框的name属性</param>
  <param name="id">下拉框的id属性</param>
-->
@helper Select(string sectioncd, string name, string id)
{
<select id="@id" name="@name" class="Select_customizeTwo" style="height:22px;width:113px">
<option value="" selected="selected">@VT_Common.All</option>
</select>
    <script type="text/javascript">
        $(function () {
            $.ajax({
                type: "GET",
                url: "/Common/MasterInfo/GetSelectData/@sectioncd",
                    success: function (msg) {
                        var _sc = $("#@id");
                        for (var i = 0; i < msg.length; i++) {
                            _sc.append("<option value='" + msg[i].AttrCd + "'>" + msg[i].AttrValue + "</option>");
                        }
                    }

                });
        });
    </script>
   
    }


@*
  生产单元生成html选本的下拉框
  <param name="sectioncd">MasterInfo中的sectionCD值</param>
  <param name="name">下拉框的name属性</param>
  <param name="id">下拉框的id属性</param>
*@
<!--朱静波-->
@helper SelectDepartment(string sectioncd, string name, string id)
{
<select id="@id" name="@name" class="Select_customizeThree" style="height:22px;width:113px">
</select>
    <script type="text/javascript">
        $(function () {
            $.ajax({
                type: "GET",
                url: "/Common/MasterInfo/GetSelectData/@sectioncd",
                    success: function (msg) {
                        var _sc = $("#@id");
                        var totalValue = "";
                        for (var i = 0; i < msg.length; i++) {
                            _sc.append("<option value='" + msg[i].AttrCd + "'>" + msg[i].AttrValue + "</option>");
                            totalValue = totalValue + msg[i].AttrCd + ",";
                        }
                        totalValue = totalValue.substring(0, totalValue.length - 1);
                        _sc.prepend("<option value='" + totalValue + "' selected='true'>@VT_Common.All</option>");
                        setTimeout(function () {
                            _sc.val(totalValue);                            
                        }, 10);
                        
                    }

                });
        });
    </script>
   
    }


<!--以下三个为日历控件-->
<!--开始时间日历-->
@helper TimeBeginInput(string id, string name,string varName){<input id='@id' type='text' class1='easyui-datebox' editable='false' name='@name' style="width:112px;" /><script type="text/javascript">
        $(function () {
            window.time1 = "";//定义全局变量
            window.time2 = "";
            $('#@id').datebox({               
                onChange: function () {
                    firstDate = $('#@id').datebox('getValue');                    
                        date1 = firstDate.replace(/\-/gi, "/");
                        time1 = new Date(date1).getTime();
                        if (time2 != "") {
                            if (time1 > time2) {
                                alert("第一个不能大于第二个。");
                            }
                         }
                  
                    @{
                        string html = "=";
                     }
                    @varName@html$('#@id').datebox('getValue');//获取日历的值
                }
            });
           // $('.readOnly_class').attr('readOnly', 'readOnly');
            $('.readOnly_class').keydown(function () {
                var k = window.event.keyCode;
                if (8 == k) {
                    event.keyCode = 0;//取消按键操作
                }
            });
        });        
    </script>}
<!--结束时间日历-->
@helper TimeEndInput(string id, string name,string varName){<input id='@id' type='text' class1='easyui-datebox' editable='false' name='@name' style="width:112px;" /><script type="text/javascript">
        $(function () {           
            window.time1 = "";
            window.time2 = "";
            $('#@id').datebox({
                onChange: function () {
                    seconddate = $('#@id').datebox('getValue');                   
                        date2 = seconddate.replace(/\-/gi, "/");
                        time2 = new Date(date2).getTime();
                        if (time1 != "") {
                            if (time1 > time2) {
                                alert("第二个不能小于第一个。");                            
                            }
                         }                    
                    @{
                        string html = "=";
                     }
                    @varName@html$('#@id').datebox('getValue');//获取日历的值
                }
            });
            //$('.readOnly_class').attr('readOnly', 'readOnly');            
            $('.readOnly_class').keydown(function () {
                var k = window.event.keyCode;
                if (8 == k) {
                    event.keyCode = 0;//取消按键操作
                }
            });

        });
    </script>}
<!--单独的日历-->
@helper TimeInputAlone(string id, string name,string varName,string dafault=""){<input id='@id' type='text' class='easyui-datebox' editable='false' name='@name' style="width:112px;" />
    <script type="text/javascript">
        $(function () {
           @* var c = $('#@id').data('combo').combo.find('span .combo-arrow');*@
           @* $(c).attr("@varName", "@varName"); *@
            $('#@id').datebox({
                onChange: function () {
                    @{
                        string html = "=";
                     }
                   @varName@html$('#@id').datebox('getValue');//获取日历的值                    
                }
            });
            //$('.readOnly_class').attr('readOnly', 'readOnly');
            $('.readOnly_class').keydown(function () {
                var k = window.event.keyCode;
                if (8 == k) {
                    event.keyCode = 0;//取消按键操作
                }
            });
        });
    </script>}
<!--====================================================-->
       
<!--
  时间选择框
  <param name="name">元素的name属性</param>
  <param name="id">元素的id属性</param>  
-->


@helper TimeInput(string id, string name)
{<input id='@id' type='text' class='easyui-datebox' name='@name' editable='false' style="width:112px;" />}
@helper TimeInput(string id, string name, string defaultValue = "")
{<input id='@id' type='text' value="@defaultValue" class='easyui-datebox compareDate' editable='false' name='@name' style="width:112px;" />}



<!--
  时间选择框
  <param name="name">元素的name属性</param>
  <param name="id">元素的id属性</param>  
-->
@helper TimeInput(string name)
{<input id='@name' type='text' class='easyui-datebox' name='@name' editable='false' style="width:112px;" />}

<!--朱静波-->
<!--简单的时间选择框,不可进行日期选择-->
@helper TimeInputDisable(string id)
{<input id='@id' type='text' class='easyui-datebox' name='@id' style="width:112px;" data-options="disabled:true,editable:false"  />}


<!--============================自动检索框==============================-->
<!--
    自动检索功能 20131204 杜兴军
    <param name="type">检索的数据类型,如Constant.AutoSearchType.USER</param>
    <param name="valueField">隐藏input的name属性</param>
    <param name="name">name属性</param>
    <param name="other">其他属性</param>    
-->
@helper AutoSearch(string type, string valueField = "", string name = "", string other = "")
{<input type="text" class="combo datebox Search_InputSpan" style="width:112px;height: 20px;" name="@name" model="autoSearch-@type" data-options="{valueField:'@valueField'}" @other />}
<!--
    人员自动检索功能 20131204 杜兴军
    <param name="type">检索的数据类型,如Constant.AutoSearchType.USER</param>
    <param name="valueField">隐藏input的name属性</param>
    <param name="name">name属性</param>
    <param name="id">id属性</param>    
-->
@helper AutoSearchUser(string valueField, string name, string id = "")
{<input type="text" class="combo datebox Search_InputSpan" style="width:112px;height: 20px;" name="@name" model="autoSearch-@Constant.AutoSearchType.USER" data-options="{valueField:'@valueField'}" id="@id"/>}

<!--
    人员自动检索功能 20131224 杜兴军
    <param name="valueField">隐藏input的name属性</param>
    <param name="id">id属性</param>
    <param name="defaultVisibleValue">value值（显示的）</param>    
    <param name="defaultHiddenValue">value值（隐藏的）</param>    
    -->
@helper AutoSearchUser(string valueField, string id, string defaultVisibleValue, string defaultHiddenValue)
{<input type="text" class="combo datebox Search_InputSpan" style="width:112px;height: 20px;" model="autoSearch-@Constant.AutoSearchType.USER" data-options="{valueField:'@valueField',defaultValue:'@defaultHiddenValue'}" id="@id" value="@defaultVisibleValue"/>}




<!--====================输入框===================================-->
<!--
    扩展的datebox,可以使input保持原有的属性
    <param name="name">name属性</param>
    <param name="className">class属性(新增)</param>   
    <param name="other">其他input属性</param>   
-->
@helper ExtendDatebox(string name = "", string className = "", string other = "")
{
<span class="datebox haveborder datebox-container">
	<input type="text" class="noborder date-text @className" name="@name @other" /><span class="combo-arrow extend-datebox"></span>
</span>}

<!--不带放大镜的输入框-->
@helper InputSimple(string name, int maxlength = 15)
{<input type="text" id="@name" class="normal_input"  name="@name" maxlength="@maxlength" />}
@helper InputSimple(string name, string otherStyle)
{<input type="text" id="@name" class="normal_input"  name="@name" @otherStyle />}
@helper InputSimple(string name, string id, string defaultValue)
{<input type="text" id="@id" class="normal_input"  name="@name" value="@defaultValue" />}
<!--朱静波-->
<!--不带放大镜的输入框-->
<!--用例：UserHelpers.InputSimple("ProductType",new {disable="true",size=9,width="'100%'",txtClass="'txtWidth'"})-->
@helper InputSimple(string id, object options)
{<input type="text" id="@id" class="" name="@id" />
    <script type="text/javascript">
        $(function () {
            //等号和单引号的转换
            //console.info("@options");
            var reg = new RegExp("=", "g");
            var change = "@options".replace(reg, ":");
            reg=new RegExp("&#39;", "g");
            change = change.replace(reg, "'");

            var result = eval("(" + change + ")");
            //console.info(result);
            //默认属性设置，可根据需要进行添加，但是必须为相应属性的添加IF语句
            var _options = $.extend({
                txtClass: "normal_input",
                maxlength: 7,
                size: 6,
                width:"112px"
            }, result);
            //console.info(_options);
            var controls = $("#@id");
            if (_options.disable != null) {
                controls.attr("disabled", "disabled");
            }
            if (_options.maxlength != null) {
                controls.attr("maxlength", _options.maxlength);
            }
            if (_options.size!= null) {
                controls.attr("size", _options.size);
            }
            if (_options.txtClass != null) {
                controls.addClass(_options.txtClass);
            }
            if (_options.width != null) {
                controls.css("width", _options.width );
            }
        });
    </script>
}

<!--以下input带有放大镜-->
<!--
  输入框
  <param name="name">元素的name属性</param>
  <param name="id">元素的id属性</param>
  <param name="defaultValue">元素的默认值</param> 
  fild参数为暂存数据，    
-->
@helper Input(string id, string name, string defaultValue = "", string other = ""){<span class="combo datebox Search_InputSpan"><input id='@id' type='text' class='combo-text Style_inputmine' name='@name' @other value="@defaultValue" /><span><span class="searchbox-smallbutton" onclick="alert('Come');"></span></span></span>}
@helper Input(string id, string name, string action, string fild = "", string defaultValue = "", string other = ""){<span class="combo datebox Search_InputSpan"><input id='@id' type='text' class='combo-text Style_inputmine' name='@name' @other value="@defaultValue" />@if (String.IsNullOrEmpty(fild)){<input id="@fild" name="@fild" type="hidden" />}<span><span class="searchbox-smallbutton" onclick="@action"></span></span></span>}

<!--
  输入框
  <param name="name">元素的name属性</param>
  <param name="id">元素的id属性</param>
  <param name="maxlength">元素的最大值</param>    
  <param name="size">元素的字符宽度</param>    
-->
@helper Input(string id, string name, int maxlength, string other = "", int size = 100)
{<span class="combo datebox Search_InputSpan"><input id='@id' type='text' class='combo-text Style_inputmine' name='@name' @other  maxlength="@maxlength" size="@size" /><span><span class="searchbox-smallbutton" onclick="alert('Come');"></span></span></span>}
@helper Input(string id, string name, int maxlength, string action, string other = "", int size = 100)
{<span class="combo datebox Search_InputSpan"><input id='@id' type='text' class='combo-text Style_inputmine' name='@name' @other  maxlength="@maxlength" size="@size" /><span><span class="searchbox-smallbutton" onclick="@action"></span></span></span>}

<!--
  输入框，默认name和id相同
  <param name="name">元素的name属性</param>
  <param name="maxlength">元素的最大值</param>    
  <param name="size">元素的字符宽度</param>    
-->
@helper Input(string name, int maxlength, int size)
{<span class="combo datebox Search_InputSpan"><input id='@name' type='text' class='combo-text Style_inputmine' name='@name'  maxlength="@maxlength" size="@size" /><span><span class="searchbox-smallbutton" onclick="alert('Come');"></span></span></span>}<!--不用时删除-->
@helper Input(string name, int maxlength, int size, string action)
{<span class="combo datebox Search_InputSpan"><input id='@name' type='text' class='combo-text Style_inputmine' name='@name'  maxlength="@maxlength" size="@size" /><span><span class="searchbox-smallbutton" onclick="@action"></span></span></span>}<!--不用时删除-->

<!--
  输入框，默认name和id相同
  <param name="name">元素的name属性</param> 
-->
@helper Input(string name)
{<span class="combo datebox Search_InputSpan"><input id='@name' type='text' class='combo-text Style_inputmine' name='@name'  maxlength="15" /><span><span class="searchbox-smallbutton" onclick="alert('Come');"></span></span></span>}<!--不用时删除-->
@helper Input(string name, string action)
{<span class="combo datebox Search_InputSpan"><input id='@name' type='text' class='combo-text Style_inputmine' name='@name'  maxlength="15" /><span><span class="searchbox-smallbutton" onclick="@action"></span></span></span>}<!--不用时删除-->
<!--输入框只读--><!--js代码位置勿动，影响样式-->
@helper InputReadOnly(string name, string action, string maxlength = "")
{<span class="combo datebox Search_InputSpan"><input id='@name' type='text' class='combo-text Style_inputmine' name='@name'  maxlength="@maxlength"  @*readOnly="readOnly" style="cursor:not-allowed;"*@ /><span><span class="searchbox-smallbutton" onclick="@action"></span></span></span><script type="text/javascript">    
    @*$('#@name').keydown(function (e) {
        if (window.event.keyCode != 8)//来判断除了退格键以外其它按键都不可用，用来作为假视只读（通过按键的不能输入来作为只读）。
        {
            return false;
        }        
    });*@
 </script>}

<!--按钮自定义-->
@helper Button(string clickfunctionName, string dispValue, string id = "", string otherProperty = "")
{<input class="dispValue_class" type="button" id="@id" value="@dispValue" onclick="@clickfunctionName;" @otherProperty />}



<!--=======================================按钮====================================================-->
<!--
  新建按钮，默认name和id相同
  <param name="clickfunctionName">onclick事件调用的函数</param> 
  <param name="id">按钮的id</param> 
-->
<!-- 新建 -->
@helper ButtonForCreate(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="NewlyBuildButton_Menument" type="button" id="@id"  value="@VT_Common.Create" onclick="@clickfunctionName;" @otherProperty />}
<!--确定-->
@helper ButtonForConfirmation(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ConfirmationButton_Menument" type="button" id="@id"  value="@VT_Common.Ensure" onclick="@clickfunctionName;" @otherProperty />}
<!-- 修改 -->
@helper ButtonForUpdate(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="EditButton_Menument" type="button" id="@id" value="@VT_Common.Update" onclick="@clickfunctionName;" @otherProperty />}
<!-- 删除 -->
@helper ButtonForDelete(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="DeleteButton_Menument" type="button" id="@id" value="@VT_Common.Delete" onclick="@clickfunctionName;" @otherProperty />}
<!-- 关闭 -->
@helper ButtonForClose(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="CloseButton_Menument" type="button" id="@id" value="@VT_Common.Close" onclick="@clickfunctionName;" @otherProperty />}
<!-- 查找 -->
@helper ButtonForSearch(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="SearchButton_Menument" style="line-height:28px;" type="button" id="@id" value="@VT_Common.Select" onclick="@clickfunctionName ;" @otherProperty />}
<!-- 保存 -->
@helper ButtonForSave(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="SaveButton_Menument" type="button" id="@id" value="@VT_Common.Save" onclick="@clickfunctionName;" @otherProperty />}
<!-- 添加 -->
@helper ButtonForAdd(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="AddButton_Menument" type="button" id="@id" value="@VT_Common.Add" onclick="@clickfunctionName;" @otherProperty />}
<!-- 退回 -->
@helper ButtonForBack(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="BackButton_Menument" type="button" id="@id" value="@VT_Common.Back" onclick="@clickfunctionName;" @otherProperty />}
<!-- 审核 -->
@helper ButtonForExamine(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="Examine_Menument" type="button" id="@id" value="@VT_Common.Examine" onclick="@clickfunctionName;" @otherProperty />}
<!-- 导入 -->
@helper ButtonForImport(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ImportButton_Menument" type="button" id="@id" value="@VT_Common.Import" onclick="@clickfunctionName;" @otherProperty />}
<!-- 导出 -->
@helper ButtonForExport(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ExportButton_Menument" type="button" id="@id" value="@VT_Common.Export" onclick="@clickfunctionName;" @otherProperty />}
<!-- 生成工票 -->
@helper ButtonForCreateTicket(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="CreateTicketButton_Menument" type="button" id="@id" value="@VT_Common.CreateTicket" onclick="@clickfunctionName;" @otherProperty />}
<!-- 打印 -->
@helper ButtonForPrint(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="PrintButton_Menument" type="button" id="@id" value="@VT_Common.Print" onclick="@clickfunctionName;" @otherProperty />}
<!--详细-->
@helper ButtonForDetail(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="DetailButton_Menument" type="button" id="@id" value="@VT_Common.Detail" onclick="@clickfunctionName;" @otherProperty />}
<!--手工登录-->
@helper ButtonForHandLoading(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="HandLandingButton_Menument" type="button" id="@id" value="@VT_Common.HandLanding" onclick="@clickfunctionName;" @otherProperty />}
<!--登录-->
@helper ButtonForLoading(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="LoadingButton_Menument" type="button" id="@id" value="@VT_Common.Landing" onclick="@clickfunctionName;" @otherProperty />}
<!--打印预览-->
@helper ButtonForPrintPreview(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="PrintPreviewButton_Menument" type="button" id="@id" value="@VT_Common.PrintPreview" onclick="@clickfunctionName;" @otherProperty />}
<!--行追加-->
@helper ButtonForLineAddition(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="LineAdditionButton_Menument" type="button" id="@id" value="@VT_Common.LineAddittion" onclick="@clickfunctionName;" @otherProperty />}
<!--报废-->
@helper ButtonForDiscard(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="DiscardButton_Menument" type="button" id="@id" value="@VT_Common.Discard" onclick="@clickfunctionName;" @otherProperty />}
<!--取消报废-->
@helper ButtonForCancelDiscard(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="CancelDiscardButton_Menument" type="button" id="@id" value="@VT_Common.CancelDiscard" onclick="@clickfunctionName;" @otherProperty />}
<!--取消订单-->
@helper ButtonForCancelOrder(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="CancelOrderButton_Menument" type="button" id="@id" value="@VT_Common.CancelOrder" onclick="@clickfunctionName;" @otherProperty />}
<!--选择-->
@helper ButtonForChoose(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ChooseButton_Menument" type="button" id="@id" value="@VT_Common.Choose" onclick="@clickfunctionName;" @otherProperty />}
<!--批准-->
@helper ButtonForSanction(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="SanctionButton_Menument" type="button" id="@id" value="@VT_Common.Sanction" onclick="@clickfunctionName;" @otherProperty />}
<!--任务接收-->
@helper ButtonForTaskReceiving(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="TaskReceiving_Menument" type="button" id="@id" value="@VT_Common.TaskReceiving" onclick="@clickfunctionName;" @otherProperty />}
<!--下一步-->
@helper ButtonForNextStep(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="NextStep_Menument" type="button" id="@id" value="@VT_Common.NextStep" onclick="@clickfunctionName;" @otherProperty />}
<!--产能分析-->
@helper ButtonForCapacityAnalysis(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="CapacityAnalysis_Menument" type="button" id="@id" value="@VT_Common.CapacityAnalysis" onclick="@clickfunctionName;" @otherProperty />}
<!--查看甘特图-->
@helper ButtonForGanttChart(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="GanttChart_Menument" type="button" id="@id" value="@VT_Common.GanttChart" onclick="@clickfunctionName;" @otherProperty />}
<!--排产解除-->
@helper ButtonForProductionRelease(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ProductionRelease_Menument" type="button" id="@id" value="@VT_Common.ProductionRelease" onclick="@clickfunctionName;" @otherProperty />}
<!--确认排产-->
@helper ButtonForConfirmedProduction(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ConfirmedProduction_Menument" type="button" id="@id" value="@VT_Common.ConfirmedProduction" onclick="@clickfunctionName;" @otherProperty />}
<!--上一步-->
@helper ButtonForBackStep(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="BackStep_Menument" type="button" id="@id" value="@VT_Common.BackStep" onclick="@clickfunctionName;" @otherProperty />}
<!--清空-->
@helper ButtonForEmpty(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="Empty_Menument" type="button" id="@id" value="@VT_Common.Empty" onclick="@clickfunctionName;" @otherProperty />}
<!--加工排产-->
@helper ButtonForProcessProduction(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ProcessProduction_Menument" type="button" id="@id" value="@VT_Common.ProcessProduction" onclick="@clickfunctionName;" @otherProperty />}
<!--总装排产-->
@helper ButtonForErectionProduction(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ErectionProduction_Menument" type="button" id="@id" value="@VT_Common.ErectionProduction" onclick="@clickfunctionName;" @otherProperty />}
<!--申请-->
@helper ButtonForApplication(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="Application_Menument" type="button" id="@id" value="@VT_Common.Application" onclick="@clickfunctionName;" @otherProperty />}
<!--预览-->
@helper ButtonForPreview(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="Preview_Menument" type="button" id="@id" value="@VT_Common.Preview" onclick="@clickfunctionName;" @otherProperty />}
<!--入库-->
@helper ButtonForInStorage(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="InStorage_Menument" type="button" id="@id" value="@VT_Common.InStorage" onclick="@clickfunctionName;" @otherProperty />}
<!--出库-->
@helper ButtonForOutStorage(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="OutStorage_Menument" type="button" id="@id" value="@VT_Common.OutStorage" onclick="@clickfunctionName;" @otherProperty />}
<!--调度单生成-->
@helper ButtonForSchedulingNotice(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="SchedulingNotice_Menument" type="button" id="@id" value="@VT_Common.SchedulingNotice" onclick="@clickfunctionName;" @otherProperty />}
<!--原料确认-->
@helper ButtonForMaterialConfirm(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="MaterialConfirm_Menument" type="button" id="@id" value="@VT_Common.MaterialConfirm" onclick="@clickfunctionName;" @otherProperty />}
<!--加工流转卡-->
@helper ButttonForTransferCard(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="TransferCard_Menument" type="button" id="@id" value="@VT_Common.TransferCard" onclick="@clickfunctionName;" @otherProperty />}
<!--开具领料单-->
@helper ButtonForIssueRequisitions(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="IssueRequisitions_Menument" type="button" id="@id" value="@VT_Common.IssueRequisitions" onclick="@clickfunctionName;" @otherProperty />} 
<!--取消-->
@helper ButtonForCancel(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ConfirmationButton_Menument" type="button" id="@id" value="@VT_Common.Cancel" onclick="@clickfunctionName;" @otherProperty />} 
<!--交仓-->
@helper ButtonForWarehouse(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="WarehouseButton_Menument" type="button" id="@id" value="@VT_Common.Warehouse" onclick="@clickfunctionName;" @otherProperty />}
<!--查看-->
@helper ButtonForViewEyes(string clickfunctionName, string id = "", string otherProperty = "")
{<input class="ViewEyesButton_Menument" type="button" id="@id" value="@VT_Common.ViewEyes" onclick="@clickfunctionName;" @otherProperty />}




<!--公司标题-->
@helper Company_Title(string title)
{<div class="Company_Title">@title</div>}
<!--
  标题标签
  <param name="title">当前页面的标题</param> 
-->
@helper Title(string title)
{<div class="PageTitle_div">@title</div>}

<!--
  标题标签
  <param name="title">当前页面的标题</param>
    <param name="cls">样式</param> 
-->
@helper Title(string title, string cls)
{<div class="PageTitle_div @cls">@title</div>}

<!--
  按钮下方的横线
-->
@helper Line()
{<div class="LevelLine_div"><hr/></div>}
